// Brute force solution with TC- O(N^2)

#include <bits/stdc++.h>
using namespace std;

void setZeroes(vector<vector<int>>& matrix) {

        int n = matrix.size();
        int m = matrix[0].size();

        for (int i = 0; i < n; i++) {
            for (int j = 0; j < m; j++) {
                if (matrix[i][j] == 0) {
                    for (int j = 0; j < m; j++) {
                        if (matrix[i][j] != 0) {
                            matrix[i][j] = -1;
                        }
                    }
                    for (int i = 0; i < n; i++) {
                        if (matrix[i][j] != 0) {
                            matrix[i][j] = -1;
                        }
                    }
                }
            }
        }
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < m; j++) {
                if (matrix[i][j] == -1) {
                    matrix[i][j] = 0;
                }
            }
        }
    }

int main() {
    // Write C++ code here
    vector<vector<int>> matrix = {{1, 1, 1}, {1, 0, 1}, {1, 1, 1}};

    setZeroes(matrix);
    for(int i = 0;i<3;i++)
    {
        for(int j = 0;j<3;j++)
        {
            cout<<matrix[i][j]<<" ";
        }
    }
    return 0;
}


